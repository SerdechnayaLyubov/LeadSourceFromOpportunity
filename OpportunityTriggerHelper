/**
 * @description       : 
 * @author            : ChangeMeIn@UserSettingsUnder.SFDoc
 * @group             : 
 * @last modified on  : 08-10-2021
 * @last modified by  : ChangeMeIn@UserSettingsUnder.SFDoc
**/
// class Name must start with upper case "OpportunityTriggerHelper"
public with sharing class OpportunityTriggerHelper {

    public void handleAfterUpdate(List<Opportunity> triggerNew, Map<Id, Opportunity> triggerOldMap) {
        for (Opportunity oppItem : triggerNew) {
            String nextStepOLD = triggerOldMap.get(oppItem.Id).Next_step_goal__c;
            String stageOLD = triggerOldMap.get(oppItem.Id).StageName;
            String ownerOLD = triggerOldMap.get(oppItem.Id).OwnerId;
            if (oppItem.Next_step_goal__c != nextStepOLD || oppItem.StageName != stageOLD || oppItem.OwnerId != ownerOLD) {
                JiraIntegrationService.updateOppJiraIssue(oppItem.Next_step_goal__c, oppItem.StageName, oppItem.Id);
            }
        }
    }



    //////////////// Lyuba's new method //////////////////
    public void updateFromLeadSource(Map<Id, Opportunity> mapOpportunityOld, Map<Id, Opportunity> mapOpportunityNew) {
        List<Id> accIds = new List<Id>();          
        for (Opportunity oppo : mapOpportunityNew.values()) {
            accIds.add(oppo.AccountId);              
        }  
        
        for (Opportunity opp: mapOpportunityNew.values()) {
            Opportunity oldOpp = mapOpportunityOld.get(opp.Id);
            if ((opp.StageName != oldOpp.StageName && opp.StageName == 'Won') || (oldOpp.StageName == 'Won')) {       
                accIds.add(opp.AccountId);        
            }
        }    
        List <Account> accounts = new List <Account> ([SELECT Id, AccountSource FROM Account WHERE Id IN : accIds]);
        List <Contact> contacts = new List <Contact> ([SELECT Id, AccountId, LeadSource FROM Contact WHERE AccountId IN : accIds]);
        for (opportunity opp : mapOpportunityNew.values()) {  
            for (Account a : accounts) {
                a.AccountSource = opp.LeadSource;                      
            }
            for (Contact c : contacts) {
                c.LeadSource = opp.LeadSource;
            }                               
        }          
        update accounts;
        update contacts;

    }
    //////////////// end of Lyuba's new method //////////////////




}
